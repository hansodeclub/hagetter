steps:
  # create .env file
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: bash
    args: ["-c", "echo ${_B64_ENV} | base64 -d > .env"]
  # build the container image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "asia-northeast1-docker.pkg.dev/$PROJECT_ID/hagetter/hagetter-$BRANCH_NAME:$SHORT_SHA",
        ".",
      ]
    env:
      - "NEXT_TELEMETRY_DISABLED=1"
  # push the container image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "asia-northeast1-docker.pkg.dev/$PROJECT_ID/hagetter/hagetter-$BRANCH_NAME:$SHORT_SHA",
      ]
    # Deploy container image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "beta",
        "run",
        "deploy",
        "hagetter-$BRANCH_NAME",
        "--image",
        "asia-northeast1-docker.pkg.dev/$PROJECT_ID/hagetter/hagetter-$BRANCH_NAME:$SHORT_SHA",
        "--region",
        "asia-northeast1",
        "--platform",
        "managed",
        "--allow-unauthenticated",
        "--quiet",
      ]
  # Purge all CloudFlare cache
  - name: "gcr.io/cloud-builders/curl"
    args:
      [
        "-X",
        "POST",
        "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE}/purge_cache",
        "-H",
        "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}",
        "-H",
        "Content-Type: application/json",
        "--data",
        '{"purge_everything":true}',
      ]
images:
  - asia-northeast1-docker.pkg.dev/$PROJECT_ID/hagetter/hagetter-$BRANCH_NAME:$SHORT_SHA
timeout: 1800s
